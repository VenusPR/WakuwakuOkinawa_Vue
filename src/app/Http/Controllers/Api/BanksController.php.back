<?php

namespace App\Http\Controllers\Api;
// namespace App\Http\Controllers;
use Illuminate\Support\Facades\DB;

use App\Http\Controllers\Controller;
use Illuminate\Http\Request;
use App\Models\Bank;
use App\Models\User;

class BanksController extends Controller
{

    public function index(Request $request, int $id)
    {
        $user_id = 1;
        $banks = Bank::where('user_id', $user_id)->get();
        return $banks;
    }
    /**
     * 口座の一覧取得と個別取得
     */
    // public function get(Request $request, int $id)
    // {
    //     $user_id = 1;
    //     if (empty($id)) { //idが無い場合
    //         if (Bank::where('user_id', $user_id)->exists()) {
    //             $banks = Bank::where('user_id', $user_id)->get();
    //         } else {
    //             return response()->json([
    //                 'message' => 'bank not found'
    //             ], 404);
    //         }
    //         return $banks;
    //     } elseif (!empty($id)) { //idがある場合
    //         if (Bank::where('id', $id)->exists()) {
    //             $bank = Bank::find($id);
    //         } else {
    //             return response()->json([
    //                 'message' => 'bank not found'
    //             ], 404);
    //         }
    //         return $bank;
    //     }
    // }

    /**
     * 個人の口座を変更
     * @request
     * bank_name
     * branch_name
     * account_type
     * account_number
     * account_name
     */
    public function put(Request $request, int $id)
    {
        $user_id = 1;
        if (Bank::where('id', $id)->exists()) {
            $bank = Bank::find($id);
            if (!empty($request->bank_name)) {
                $bank->bank_name = $request->bank_name;
            }
            if (!empty($request->branch_name)) {
                $bank->branch_name = $request->branch_name;
            }
            if (isset($request->account_type)) {
                $bank->account_type = $request->account_type;
            }
            if (isset($request->account_number)) {
                $bank->account_number = $request->account_number;
            }
            if (isset($request->account_name)) {
                $bank->account_name = $request->account_name;
            }
            $bank->save();

            return response()->json([
                'message' => 'updated bank info'
            ], 201);
        } else {
            return response()->json([
                'message' => 'bank not found'
            ], 404);
        }
    }

    /**
     * 個人の口座を追加
     * @request
     * bank_name
     * branch_name
     * account_type
     * account_number
     * account_name
     */
    public function post(Request $request)
    {
        $user_id = 1;
        $bank = new Bank();
        $bank->user_id = $user_id;
        $bank->bank_name = $request->bank_name;
        $bank->branch_name = $request->branch_name;
        $bank->account_type = $request->account_type;
        $bank->account_number = $request->account_number;
        $bank->account_name = $request->account_name;
        $bank->save();

        return response()->json([
            'message' => 'created bank'
        ], 201);
    }

    /**
     * 個人の口座の削除
     */
    public function delete(Request $request, int $id)
    {
        if (Bank::where('id', $id)->exists()) {
            $bank = Bank::find($id);
            $bank->delete();

            return response()->json([
                'message' => 'delete bank'
            ], 202);
        } else {
            return response()->json([
                'message' => 'bank not found'
            ], 404);
        }
    }
}
